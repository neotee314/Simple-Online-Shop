plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

ext {
    lombokVersion = '1.18.30'
    jakartaPersistenceVersion = '3.1.0'
    jakartaTransactionVersion = '2.0.1'
    springDocVersion = '2.3.0'
    swaggerVersion = '2.2.32'
    mapstructVersion = '1.4.2.Final'
    archunitVersion = '1.2.1'
    datafakerVersion = '2.4.2'
    codeAssertVersion = '0.9.15'
}

group = 'com.neotee'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://jitpack.io' }
}

dependencies {
    // Spring Boot Core
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    
    // Database
    runtimeOnly 'com.h2database:h2'
    
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    
    // Jakarta EE
    implementation "jakarta.persistence:jakarta.persistence-api:${jakartaPersistenceVersion}"
    implementation "jakarta.transaction:jakarta.transaction-api:${jakartaTransactionVersion}"
    
    // OpenAPI Documentation
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springDocVersion}"
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.springframework.data', module: 'spring-data-rest-webmvc'
    }
    implementation "io.swagger.core.v3:swagger-annotations:${swaggerVersion}"
    
    // Mapping & Utilities
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "net.datafaker:datafaker:${datafakerVersion}"
    implementation "guru.nidi:code-assert:${codeAssertVersion}"
    
    // Testing
    implementation "com.tngtech.archunit:archunit-junit5:${archunitVersion}"
    implementation 'com.github.divekit:divekit-test-library:e90e4e7'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}